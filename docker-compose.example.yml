version: '3.5'

volumes:
  data-postgres:
    external: false
  data-mysql:
    external: false

#networks:
#  mobile:
#    driver: ${NETWORKS_DRIVER}

services:
  
  mysql:
    build: 
      context: ./bancos/mysql/.
      args: 
        - MYSQL_IMAGE=${MYSQL_IMAGE}
        - MYSQL_PORT=${MYSQL_PORT}
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    container_name: mysql
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_DATABASE: default
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - data-mysql:/var/lib/mysql
  
  postgres:
    build: 
      context: ./bancos/postgresql/.
      args:
        - PGSQL_IMAGE=${PGSQL_IMAGE}
        - PGSQL_PORT=${PGSQL_PORT}
    container_name: postgres
    environment: 
      POSTGRES_PASSWORD: ${PGSQL_PASSWORD}
    ports: 
      - ${PGSQL_PORT}:5432
    volumes:
      - data-postgres:/var/lib/postgresql/data
  
  phpmyadmin:
    image: ${PHPMYADMIN_IMAGE}
    container_name: phpmyadmin
    restart: always
    depends_on:
      - mysql
    ports:
      - ${PHPMYADMIN_PORT}:80
    environment:
      MYSQL_USERNAME: root 
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      PMA_HOST: mysql
      PMA_ARBITRARY: 1

  php:
    build: 
      context: ./php
      args: 
        - AUTOCOMPLETE=${AUTOCOMPLETE_PHP_NGINX}
        - PHP_IMAGE=${PHP_IMAGE}
    container_name: php
    user: ${UID}:${GID}
    volumes:
      - ./sites:/var/www/html
    ports:
      - 9000:9000

  nginx:
    image: ${NGINX_IMAGE}
    container_name: nginx  
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./sites:/var/www/html
    ports:
      - ${NGINX_PORT}:80
  
  apache:
    build:
      context: ./apache/.
      args: 
        - APACHE_IMAGE=${APACHE_IMAGE}
        - APACHE_PORT=${APACHE_PORT}
    container_name: apache
    user: ${UID}:${GID}
    restart: always
    volumes:
      - ./sites:/var/www/html
      - ./apache/sites-avaliable:/etc/apache2/sites-available
    ports:
      - ${APACHE_PORT}:80
      - 9000:9000

  angular:
    build:
      context: ./angular/.
      args: 
        - ANGULAR_IMAGE=${ANGULAR_IMAGE}
    container_name: angular
    user: ${UID}:${GID}
    volumes:
      - ./sites:/home/node
    ports:
      - ${ANGULAR_PORT}:4200
    stdin_open: true
    tty: true
  
  react:
    build:
      context: ./react/.
      args: 
        - REACT_IMAGE=${REACT_IMAGE}
        - REACT_PORT=${REACT_PORT}
    container_name: react
    user: ${UID}:${GID}
    volumes:
      - ./sites:/home/node
    ports:
      - ${REACT_PORT}:3000
    stdin_open: true
    tty: true
  
  react-native:
    build: ./react-native/.
    container_name: react-native
    ports:
      - 3000:3000
      - 19000:19000
      - 19001:19001
      - 8081:8081
      - 5037:5037
      - 5555:5555
    volumes:
      - ./react-native/Android:/home/node
    #networks: 
    #  - mobile
    stdin_open: true
    tty: true

  phppgadmin:
    build: ./phppgadmin/.
    restart: always
    depends_on: 
      - postgres
    ports:
      - ${PHPPGADMIN_PORT}:80
    environment: 
      PHP_PG_ADMIN_SERVER_PG_DUMP_PATH: /usr/bin/pg_dump
      PHP_PG_ADMIN_SERVER_PG_DUMPALL_PATH: /usr/bin/pg_dumpall
      PHP_PG_ADMIN_SERVER_HOST: postgres
  
  mongo:
    image: ${MONGO_IMAGE}
    restart: always
    container_name: mongo
    ports:
      - ${MONGO_PORT}:27017
    #volumes:
    #  - ./bancos/mongo/db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
  
  mongo-express:
    image: mongo-express
    restart: always
    container_name: mongo-express
    depends_on:
      - mongo
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      
  redis:
    image: ${REDIS_IMAGE}
    container_name: redis
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./bancos/redis/db:/data
    command: redis-server --appendonly yes

  firebird:
    build: 
      context: ./bancos/firebird/.
      args: 
        - FIREBIRD_IMAGE=${FIREBIRD_IMAGE}
    container_name: firebird
    ports:
      - ${FIREBIRD_PORT}:3050
    environment:
      #TZ: America/Bahia
      ISC_PASSWORD: ${ISC_PASSWORD}
      FIREBIRD_DATABASE: ${FIREBIRD_DATABASE}
      # FIREBIRD_USER: ${FIREBIRD_USER}
      # FIREBIRD_PASSWORD: ${FIREBIRD_PASSWORD}
    volumes:
      - ./bancos/firebird/db:/firebird/data
      - ./bancos/firebird/etc:/firebird/etc
    # stdin_open: true
    # tty: true
  
  monitor_docker:
    image: google/cadvisor:latest
    restart: always
    ports:
      - ${MONITOR_DOCKER}:8080
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
  
  ngrok:
    build:
      context: ./ngrok/.
      args: 
        - NGROK_IMAGE=${NGROK_IMAGE}
    container_name: ngrok
    volumes:
      - ./sites:/var/www/html
      - ./ngrok/configuracoes/ngrok.yml:/home/ngrok/.ngrok2/ngrok.yml
    ports:
      - ${NGROK_PORT}:4040
    #environment:
    #  NGROK_BINDTLS: 'false'
    entrypoint:
      - ngrok
      - start
      - --all
